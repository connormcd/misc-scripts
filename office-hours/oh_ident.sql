REM
REM Standard disclaimer - anything in here can be used at your own risk.
REM 
REM It is very likely you'll need to edit the script for correct usernames/passwords etc.
REM 
REM No warranty or liability etc etc etc. See the license file in the git repo root
REM
REM *** USE AT YOUR OWN RISK ***
REM 

clear screen
@clean
set termout off
conn USER/PASSWORD@MY_PDB
set termout off
@drop t
@drop t_new
set termout on
set lines 60
clear screen
set feedback on
set serverout on
set echo on
create table t as 
select *
from dba_objects
where object_id is not null;
pause
alter table t
  add primary key ( object_id);
pause;
clear screen
alter table t modify object_id identity;
pause
alter table t modify object_id number
  generated always as identity;
pause
alter table t add new_pk number 
  generated  always as identity;
pause
select new_pk
from t
where rownum <= 10;
pause
analyze table t compute statistics;
pause
select chain_cnt
from user_tables
where table_name = 'T';
pause
clear screen
alter table t drop column new_pk;
pause
alter table t move pctfree 0 online;
pause
alter table t add new_pk number 
  generated  always as identity;
pause
analyze table t compute statistics;
pause
select chain_cnt
from user_tables
where table_name = 'T';
pause
clear screen
drop table t purge;
create table t as 
select *
from dba_objects
where object_id is not null;
pause
alter table t add new_pk number
  generated by default on null as identity;
pause  
select new_pk
from t
where rownum <= 10;
pause

clear screen
drop table t purge;
create table t as 
select 
   object_id
  ,owner
  ,object_name
  ,subobject_name
  ,data_object_id
from dba_objects
where object_id is not null;
pause
alter table t
  add primary key ( object_id);
pause
clear screen
create table t_new as 
select * from t
where 1=0;
pause
alter table t_new add new_pk number
  generated always as identity;
pause
clear screen
begin
  dbms_redefinition.start_redef_table(user,'T','T_NEW');
end;
/
pause
begin
  dbms_redefinition.finish_redef_table(user,'T','T_NEW');
end;
/
pause
desc t
pause
clear screen
--
-- Sidenote: GENERATED ALWAYS is .... ALWAYS :-)
--
pause
declare
  l_row t%rowtype;
begin

  l_row.object_id      := 0;
  l_row.owner          := 'DEMO';
  l_row.object_name    := 'BLAH';
  l_row.subobject_name := 'XXX';
  l_row.data_object_id := 0;
  
  insert into t values l_row;
end;
.
pause
/
pause
clear screen
alter table t modify new_pk 
  generated by default on null as identity;
pause  
declare
  l_row t%rowtype;
begin

  l_row.object_id      := 0;
  l_row.owner          := 'DEMO';
  l_row.object_name    := 'BLAH';
  l_row.subobject_name := 'XXX';
  l_row.data_object_id := 0;
  
  insert into t values l_row;
end;
/

